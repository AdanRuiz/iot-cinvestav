<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>iot-cinvestav2</application>
	<version>1</version>

	<!-- Allows App Engine to send multiple requests to one instance in parallel: -->
	<threadsafe>true</threadsafe>

	<!-- Configure serving/caching of GWT files -->
	<static-files>
		<include path="**" />

		<!-- The following line requires App Engine 1.3.2 SDK -->
		<include path="**.nocache.*" expiration="0s" />

		<include path="**.cache.*" expiration="365d" />
		<exclude path="**.gwt.rpc" />
	</static-files>

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
		<property name="cloudsql.url.dev"
			value="jdbc:mysql://173.194.83.160:3306/data?user=root&amp;password=root" />
		<property name="cloudsql.url"
			value="jdbc:google:mysql://iot-cinvestav2:data/data?user=root"/>
	</system-properties>

	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		<sessions-enabled>true</sessions-enabled> It's possible to reduce request 
		latency by configuring your application to asynchronously write HTTP session 
		data to the datastore: <async-session-persistence enabled="true" /> With 
		this feature enabled, there is a very small chance your app will see stale 
		session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions -->
	<use-google-connector-j>true</use-google-connector-j>
	<sessions-enabled>true</sessions-enabled>

</appengine-web-app>
